{
  "name": "Hikarirun 光",
  "nodes": [
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.1,
      "position": [
        -180,
        -140
      ],
      "id": "192a5e68-9373-45a7-ad59-7e0eb6eb4e9d",
      "name": "Telegram Trigger",
      "webhookId": "e1952b58-3974-472e-80aa-7ccfeeb07444",
      "credentials": {
        "telegramApi": {
          "id": "fawIAJ2ZNZhJXtkt",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "id": "dfb2d356-9f0e-429e-bfca-ec190999f6fe"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Text"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        40,
        -140
      ],
      "id": "1b40524a-d7ba-4e6e-a564-d956c8414022",
      "name": "Switch"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "108e0f9f-84f4-4144-8b11-de30622f7b55",
              "name": "Text.",
              "value": "={{ $json.message.text ? $('Telegram Trigger').item.json.message.text : 'Texte non défini' }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        260,
        -140
      ],
      "id": "dcd770bb-ac5f-43b9-a649-5ba076c178b5",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.Text }}",
        "options": {
          "systemMessage": "=Votre rôle est d'analyser les demandes, de clarifier les incertitudes et, surtout, de stocker et de récupérer les \"souvenirs\" concernant les informations fournies par l'utilisateur.\n\nCapacités de base:\nConscience du contexte - La date et l'heure est: {{ $now }}\n\nGestion de la mémoire - Vous interagissez avec les outils Supabase pour la gestion de la mémoire:\n\nAppelez l'outil Store_Memory pour enregistrer de nouveaux \"souvenirs\" et vous souvenir des détails et des faits en fonction des informations de l'utilisateur. Résumez les informations fournies par l'utilisateur en une phrase d'une ligne à stocker dans une base de données Supabase.\n\nAppelez l'outil Get_Memory pour récupérer les \"souvenirs\" enregistrés afin de répondre aux questions de l'utilisateur et de rédiger des messages.\n\nClarification avant action - Si une demande est floue, posez des questions de clarification à l'utilisateur avant d'appeler des outils pour garantir l'exactitude. Appelez toujours l'outil Get_Memory pour vérifier les informations stockées avant de répondre.\n\nWorkflow de gestion de la mémoire:\nRécupérez les souvenirs pertinents avant de répondre ou d'enregistrer de nouvelles informations.\n\nVérifiez les doublons - Si l'utilisateur fournit des informations similaires à une mémoire existante, ne les enregistrez pas à nouveau. Si un doublon est trouvé, reconnaissez-le avec une réponse comme :\n\"Je le sais déjà ! Voici les informations que vous avez partagées plus tôt.\" N'enregistrez que les nouvelles informations uniques pour éviter la redondance.\n\nDirectives de comportement:\nMaintenez un ton professionnel, doux et amical.\nSoyez proactif dans le rappel des informations pertinentes pour améliorer vos réponses.\nClarifiez les demandes ambiguës avant d'exécuter des tâches.\nConfirmez les actions si nécessaire pour garantir que les attentes de l'utilisateur sont satisfaites."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        480,
        -140
      ],
      "id": "9a2ab1dd-bcaf-4766-8e79-d20615f9343a",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatMistralCloud",
      "typeVersion": 1,
      "position": [
        460,
        80
      ],
      "id": "de04d76a-f89f-46ed-b817-264ff11ed5c8",
      "name": "Mistral Cloud Chat Model",
      "credentials": {
        "mistralCloudApi": {
          "id": "3MlkHOHkrhVgnv1K",
          "name": "Mistral Cloud account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.Text }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        640,
        100
      ],
      "id": "f1cb2318-5840-4f82-a05a-b3a531ad74e4",
      "name": "Window Buffer Memory"
    },
    {
      "parameters": {
        "tableId": "clients",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "thread_id",
              "fieldValue": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Field_Value', ``, 'string') }}"
            },
            {
              "fieldId": "nom",
              "fieldValue": "={{ $('Telegram Trigger').item.json.message.from.first_name }} {{ $('Telegram Trigger').item.json.message.from.last_name }}"
            },
            {
              "fieldId": "telegram_id",
              "fieldValue": "={{ $('Telegram Trigger').item.json.message.chat.id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabaseTool",
      "typeVersion": 1,
      "position": [
        840,
        80
      ],
      "id": "16c41943-ed21-4d2f-9132-3ee1bb997273",
      "name": "Store_Memory",
      "credentials": {
        "supabaseApi": {
          "id": "C7ijs4gEGhuHOOw4",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "clients",
        "returnAll": true,
        "filterType": "none"
      },
      "type": "n8n-nodes-base.supabaseTool",
      "typeVersion": 1,
      "position": [
        960,
        60
      ],
      "id": "ad8b2719-c73f-4ba0-accb-a36946b113eb",
      "name": "Get_Memory",
      "credentials": {
        "supabaseApi": {
          "id": "C7ijs4gEGhuHOOw4",
          "name": "Supabase account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mistral Cloud Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Window Buffer Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Store_Memory": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get_Memory": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "82a93e84-99ec-463a-9ac7-2f207e80f0c1",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "a3afd51795ea51fa25e0604fc55b0cafa31fdb1a7d764e7051539d3482821f0f"
  },
  "id": "H52zZSnpcEG4mA4a",
  "tags": []
}
